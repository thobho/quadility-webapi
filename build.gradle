buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.hidetake:gradle-ssh-plugin:2.9.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.hidetake.ssh'

group = 'com.thobho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    // https://mvnrepository.com/artifact/org.aspectj/aspectjtools
    compile group: 'org.aspectj', name: 'aspectjtools', version: '1.6.2'

    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    // https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-reactivestreams
    compile group: 'org.mongodb', name: 'mongodb-driver-reactivestreams', version: '1.6.0'
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

task copyProperties(type: Copy) {
    from 'src/main/resources/environments/application-' + env + '.properties'
    into 'src/main/resources'
    rename { "application.properties" }
}

task deployWebapp {
    dependsOn = [copyProperties, bootJar]
    doLast {
        ssh.run {
            session(remotes.aws01) {
                put from: 'build/libs/quadilityR-0.0.1-SNAPSHOT.jar', into:'quadility-webapp'
            }
        }
    }
}

task runRemoteWebapp {
    dependsOn deployWebapp {
        doLast {
            ssh.run {
                session(remotes.aws01) {
                    execute('java -jar quadilityR-0.0.1-SNAPSHOT.jar')
                }
            }
        }
    }
}

task killWebapp{
    doLast {
        ssh.run {
            session(remotes.aws01) {
                execute('ps aux | g')
                println p
            }
        }
    }
}

remotes {
    aws01 {
        host = 'ec2-18-188-88-202.us-east-2.compute.amazonaws.com'
        user = 'ubuntu'
        identity = file('lightmind.pem')
    }
}


